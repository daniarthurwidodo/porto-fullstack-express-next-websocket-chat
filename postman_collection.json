{
  "info": {
    "name": "Chat Application API",
    "description": "Complete API collection for the full-stack chat application with authentication and messaging endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:4001",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.status === 'Created') {",
                  "    const responseJson = pm.response.json();",
                  "    pm.environment.set('authToken', responseJson.token);",
                  "    pm.environment.set('userId', responseJson.user.id);",
                  "    pm.environment.set('username', responseJson.user.username);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser\",\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "register"
              ]
            },
            "description": "Register a new user account"
          },
          "response": []
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.status === 'OK') {",
                  "    const responseJson = pm.response.json();",
                  "    pm.environment.set('authToken', responseJson.token);",
                  "    pm.environment.set('userId', responseJson.user.id);",
                  "    pm.environment.set('username', responseJson.user.username);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"alice@demo.com\",\n  \"password\": \"demo123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "login"
              ]
            },
            "description": "Login with existing user credentials"
          },
          "response": []
        },
        {
          "name": "Login Demo User 1 (Alice)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.status === 'OK') {",
                  "    const responseJson = pm.response.json();",
                  "    pm.environment.set('authToken', responseJson.token);",
                  "    pm.environment.set('userId', responseJson.user.id);",
                  "    pm.environment.set('username', responseJson.user.username);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"alice@demo.com\",\n  \"password\": \"demo123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "login"
              ]
            },
            "description": "Login as demo user Alice"
          },
          "response": []
        },
        {
          "name": "Login Demo User 2 (Bob)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.status === 'OK') {",
                  "    const responseJson = pm.response.json();",
                  "    pm.environment.set('authToken', responseJson.token);",
                  "    pm.environment.set('userId', responseJson.user.id);",
                  "    pm.environment.set('username', responseJson.user.username);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"bob@demo.com\",\n  \"password\": \"demo123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "login"
              ]
            },
            "description": "Login as demo user Bob"
          },
          "response": []
        },
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/me",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "me"
              ]
            },
            "description": "Get current authenticated user information"
          },
          "response": []
        },
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/users",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "users"
              ]
            },
            "description": "Get list of all users except current user"
          },
          "response": []
        },
        {
          "name": "Logout User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/logout",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "logout"
              ]
            },
            "description": "Logout user and update offline status"
          },
          "response": []
        }
      ],
      "description": "Authentication endpoints for user registration, login, and user management"
    },
    {
      "name": "Messages",
      "item": [
        {
          "name": "Get Message History",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/messages",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "messages"
              ]
            },
            "description": "Get chat message history (last 100 messages)"
          },
          "response": []
        },
        {
          "name": "Send Message",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"Hello, this is a test message!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/messages",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "messages"
              ]
            },
            "description": "Send a new chat message"
          },
          "response": []
        }
      ],
      "description": "Message endpoints for chat functionality"
    },
    {
      "name": "Health Check",
      "item": [
        {
          "name": "Server Health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/health",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "health"
              ]
            },
            "description": "Check if the server is running"
          },
          "response": []
        }
      ],
      "description": "Health check endpoints"
    }
  ]
}
