{
  "info": {
    "name": "Chat App API",
    "description": "Complete API collection for the Chat Application with authentication, messaging, and WebSocket endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.1.0"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:4001",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "username",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/health",
          "host": ["{{baseUrl}}"],
          "path": ["api", "health"]
        },
        "description": "Check if the server is running"
      },
      "response": [
        {
          "name": "Health Check Response",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/health",
              "host": ["{{baseUrl}}"],
              "path": ["api", "health"]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "body": "{\n  \"status\": \"OK\",\n  \"message\": \"Chat server is running\"\n}"
        }
      ]
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('authToken', response.token);",
                  "    pm.collectionVariables.set('userId', response.user.id);",
                  "    pm.collectionVariables.set('username', response.user.username);",
                  "    console.log('User registered successfully. Token saved.');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser\",\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            },
            "description": "Register a new user account"
          },
          "response": [
            {
              "name": "Register Success",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"username\": \"testuser\",\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/auth/register",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "auth", "register"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "body": "{\n  \"message\": \"User created successfully\",\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"user\": {\n    \"id\": \"60f7b3b3d8e5c20015f0e8a1\",\n    \"username\": \"testuser\",\n    \"email\": \"test@example.com\",\n    \"avatar\": \"\",\n    \"isOnline\": true\n  }\n}"
            },
            {
              "name": "Register Error - User Exists",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"username\": \"testuser\",\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/auth/register",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "auth", "register"]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "body": "{\n  \"message\": \"User already exists with this email or username\"\n}"
            }
          ]
        },
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('authToken', response.token);",
                  "    pm.collectionVariables.set('userId', response.user.id);",
                  "    pm.collectionVariables.set('username', response.user.username);",
                  "    console.log('User logged in successfully. Token saved.');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "Login to an existing user account"
          },
          "response": [
            {
              "name": "Login Success",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/auth/login",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "auth", "login"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "body": "{\n  \"message\": \"Login successful\",\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"user\": {\n    \"id\": \"60f7b3b3d8e5c20015f0e8a1\",\n    \"username\": \"testuser\",\n    \"email\": \"test@example.com\",\n    \"avatar\": \"\",\n    \"isOnline\": true\n  }\n}"
            },
            {
              "name": "Login Error - Invalid Credentials",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"wrong@example.com\",\n  \"password\": \"wrongpassword\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/auth/login",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "auth", "login"]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "body": "{\n  \"message\": \"Invalid credentials\"\n}"
            }
          ]
        },
        {
          "name": "Login Demo User 1 (Alice)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('authToken', response.token);",
                  "    pm.collectionVariables.set('userId', response.user.id);",
                  "    pm.collectionVariables.set('username', response.user.username);",
                  "    console.log('Demo user Alice logged in successfully.');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"alice@demo.com\",\n  \"password\": \"demo123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "Login as demo user Alice"
          },
          "response": [
            {
              "name": "Login Success",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"alice@demo.com\",\n  \"password\": \"demo123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/auth/login",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "auth", "login"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "body": "{\n  \"message\": \"Login successful\",\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"user\": {\n    \"id\": \"60f7b3b3d8e5c20015f0e8a2\",\n    \"username\": \"alice\",\n    \"email\": \"alice@demo.com\",\n    \"avatar\": \"\",\n    \"isOnline\": true\n  }\n}"
            }
          ]
        },
        {
          "name": "Login Demo User 2 (Bob)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('authToken', response.token);",
                  "    pm.collectionVariables.set('userId', response.user.id);",
                  "    pm.collectionVariables.set('username', response.user.username);",
                  "    console.log('Demo user Bob logged in successfully.');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"bob@demo.com\",\n  \"password\": \"demo123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "Login as demo user Bob"
          },
          "response": [
            {
              "name": "Login Success",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"bob@demo.com\",\n  \"password\": \"demo123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/auth/login",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "auth", "login"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "body": "{\n  \"message\": \"Login successful\",\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"user\": {\n    \"id\": \"60f7b3b3d8e5c20015f0e8a3\",\n    \"username\": \"bob\",\n    \"email\": \"bob@demo.com\",\n    \"avatar\": \"\",\n    \"isOnline\": true\n  }\n}"
            }
          ]
        },
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "me"]
            },
            "description": "Get information about the currently authenticated user"
          },
          "response": [
            {
              "name": "Get Current User Success",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/auth/me",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "auth", "me"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "body": "{\n  \"user\": {\n    \"id\": \"60f7b3b3d8e5c20015f0e8a1\",\n    \"username\": \"testuser\",\n    \"email\": \"test@example.com\",\n    \"avatar\": \"\",\n    \"isOnline\": true\n  }\n}"
            }
          ]
        },
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "users"]
            },
            "description": "Get a list of all registered users (excluding the current user)"
          },
          "response": [
            {
              "name": "Get All Users Success",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/auth/users",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "auth", "users"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "body": "{\n  \"users\": [\n    {\n      \"_id\": \"60f7b3b3d8e5c20015f0e8a2\",\n      \"username\": \"alice\",\n      \"email\": \"alice@demo.com\",\n      \"avatar\": \"\",\n      \"isOnline\": true\n    },\n    {\n      \"_id\": \"60f7b3b3d8e5c20015f0e8a3\",\n      \"username\": \"bob\",\n      \"email\": \"bob@demo.com\",\n      \"avatar\": \"\",\n      \"isOnline\": true\n    }\n  ]\n}"
            }
          ]
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "logout"]
            },
            "description": "Logout the current user"
          },
          "response": [
            {
              "name": "Logout Success",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/auth/logout",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "auth", "logout"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "body": "{\n  \"message\": \"Logout successful\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Messages",
      "item": [
        {
          "name": "Get Messages with User",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/messages/{{userId}}?limit=50",
              "host": ["{{baseUrl}}"],
              "path": ["api", "messages", "{{userId}}"],
              "query": [
                {
                  "key": "limit",
                  "value": "50",
                  "description": "Number of messages to retrieve (default: 50)"
                },
                {
                  "key": "before",
                  "value": "",
                  "description": "Get messages before this timestamp (for pagination)",
                  "disabled": true
                }
              ]
            },
            "description": "Get messages between current user and specified user (use 'all' for group messages)"
          },
          "response": [
            {
              "name": "Get Messages Success",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/messages/{{userId}}?limit=50",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "messages", "{{userId}}"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "50"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "body": "{\n  \"messages\": [\n    {\n      \"_id\": \"60f7b3b3d8e5c20015f0e8a3\",\n      \"sender\": \"60f7b3b3d8e5c20015f0e8a1\",\n      \"recipient\": \"60f7b3b3d8e5c20015f0e8a2\",\n      \"content\": \"Hello, how are you?\",\n      \"isRead\": true,\n      \"createdAt\": \"2023-07-21T10:30:00.000Z\",\n      \"updatedAt\": \"2023-07-21T10:30:00.000Z\"\n    }\n  ]\n}"
            }
          ]
        },
        {
          "name": "Send Message",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"Hello, this is a test message!\",\n  \"recipientId\": \"all\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/messages",
              "host": ["{{baseUrl}}"],
              "path": ["api", "messages"]
            },
            "description": "Send a message to a user or to the group chat (use 'all' for group)"
          },
          "response": [
            {
              "name": "Send Message Success",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"Hello, this is a test message!\",\n  \"recipientId\": \"all\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/messages",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "messages"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "body": "{\n  \"message\": {\n    \"_id\": \"60f7b3b3d8e5c20015f0e8a4\",\n    \"sender\": {\n      \"_id\": \"60f7b3b3d8e5c20015f0e8a1\",\n      \"username\": \"testuser\",\n      \"avatar\": \"\"\n    },\n    \"recipient\": \"all\",\n    \"content\": \"Hello, this is a test message!\",\n    \"isRead\": true,\n    \"createdAt\": \"2023-07-21T10:35:00.000Z\",\n    \"updatedAt\": \"2023-07-21T10:35:00.000Z\"\n  }\n}"
            },
            {
              "name": "Send Message Error - Missing Content",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"\",\n  \"recipientId\": \"all\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/messages",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "messages"]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "body": "{\n  \"message\": \"Message content is required\"\n}"
            }
          ]
        },
        {
          "name": "Mark Messages as Read",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"senderId\": \"{{userId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/messages/mark-read",
              "host": ["{{baseUrl}}"],
              "path": ["api", "messages", "mark-read"]
            },
            "description": "Mark all messages from a specific user as read"
          },
          "response": [
            {
              "name": "Mark Messages as Read Success",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"senderId\": \"{{userId}}\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/messages/mark-read",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "messages", "mark-read"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "body": "{\n  \"success\": true\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "WebSocket",
      "item": [
        {
          "name": "Connect to WebSocket",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "ws://localhost:4001/api/ws",
              "host": ["localhost"],
              "port": "4001",
              "path": ["api", "ws"],
              "protocol": "ws"
            },
            "description": "Connect to WebSocket for real-time messaging"
          }
        }
      ]
    }
  ]
}
